// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id       String  @id @default(uuid())
  name     String
  document String? @unique
  password String
  isAdmin  Boolean @default(false)

  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  excluded_at DateTime?
  creditId    String?

  Credit Credit[]

  CreatedBy Log[] @relation("createdBy")
  Person    Log[] @relation("person")

  @@map("persons")
}

model Product {
  id          String @id @default(uuid())
  description String
  price       Float

  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  excluded_at DateTime?
  creditId    String?
  Credit      Credit[]

  @@map("products")
}

model Credit {
  id          String    @id @default(uuid())
  amount      Int
  productId   String
  personId    String
  paid        Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  excluded_at DateTime?

  product Product @relation(fields: [productId], references: [id])
  person  Person  @relation(fields: [personId], references: [id])
  Log     Log[]

  @@map("credits")
}

model Log {
  id                String    @id @default(uuid())
  description       String
  personId          String
  createdByPersonId String
  creditId          String
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  excluded_at       DateTime?

  Credit    Credit @relation(fields: [creditId], references: [id])
  CreatedBy Person @relation("createdBy", fields: [createdByPersonId], references: [id])
  Person    Person @relation("person", fields: [personId], references: [id])

  @@map("logs")
}
